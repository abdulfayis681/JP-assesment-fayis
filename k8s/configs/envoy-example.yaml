# Sample envoy config which proxies the frontend service
# This can be used as a reference to build more
# Stats for envoy will be exposed over the admin port
kind: ConfigMap
apiVersion: v1
metadata:
  name: frontend-envoy-proxy-config
  namespace: default
data:
  envoy.yaml: |-
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 8000
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: AUTO
              stat_prefix: frontend_ingress_http
              access_log:
                - name: envoy.file_access_log
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: "/dev/stdout"
              route_config:
                name: local_route
                virtual_hosts:
                - name: service
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: frontend_service
              http_filters:
              - name: envoy.filters.http.router
                typed_config: {}
      clusters:
      - name: frontend_service
        connect_timeout: 0.25s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: frontend_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: frontend-service.default.svc.cluster.local
                    port_value: 9000
    admin:
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8081
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: frontend-envoy-proxy
  namespace: default
  labels:
    app: frontend-envoy-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-envoy-proxy
  template:
    metadata:
      labels:
        app: frontend-envoy-proxy
    spec:
      containers:
      - name: frontend-envoy-proxy
        image: envoyproxy/envoy:v1.18.2
        command:
        - "envoy"
        - "-c"
        - "/etc/envoy/envoy.yaml" 
        ports:
        - containerPort: 8000
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: frontend-envoy-proxy-config # loading the config using config map
          mountPath: /etc/envoy/
      volumes:
      - name: frontend-envoy-proxy-config
        configMap:
          name: frontend-envoy-proxy-config
---
kind: Service
apiVersion: v1
metadata:
  name: frontend-envoy-proxy-service
  namespace: default
  labels:
    app: frontend-envoy-proxy
spec:
  selector:
    app: frontend-envoy-proxy
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  sessionAffinity: None
  type: ClusterIP